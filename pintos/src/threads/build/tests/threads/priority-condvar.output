Writing command line to /tmp/YmNSdcqB7W.dsk...
warning: can't find squish-pty, so terminal input will fail
bochs -q
Kernel command line: -q run priority-condvar
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-condvar':
(priority-condvar) begin
(priority-condvar) Thread priority 23 starting.
(priority-condvar) Thread priority 22 starting.
(priority-condvar) Thread priority 21 starting.
(priority-condvar) Thread priority 30 starting.
(priority-condvar) Thread priority 29 starting.
(priority-condvar) Thread priority 28 starting.
(priority-condvar) Thread priority 27 starting.
(priority-condvar) Thread priority 26 starting.
(priority-condvar) Thread priority 25 starting.
(priority-condvar) Thread priority 24 starting.
(priority-condvar) Signaling...
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01028b4
 cr2=0000001c error=00000000
 eax=c0111b08 ebx=c0111b68 ecx=c0116000 edx=00000000
 esi=c0116f90 edi=c0111b68 esp=c0116000 ebp=c0116f30
 cs=0008 ds=0010 es=0010 ss=1b68
Kernel PANIC at ../../threads/interrupt.c:373 in intr_handler(): Unexpected interrupt
Call stack: 0xc0107416 0xc0101778 0xc010190b 0xc01028b4 0xc01028e2 0xc010288a 0xc0102c32 0xc010aeac 0xc0100d20.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 133 ticks
Thread: 0 idle ticks, 133 kernel ticks, 0 user ticks
Console: 1422 characters output
Keyboard: 0 keys pressed
Powering off...
