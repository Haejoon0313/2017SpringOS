TOTAL TESTING SCORE: 88.4%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/vm/Rubric.functionality                  47/ 55  42.7%/ 50.0%
tests/vm/Rubric.robustness                     20/ 28  10.7%/ 15.0%
tests/userprog/Rubric.functionality           108/108  10.0%/ 10.0%
tests/userprog/Rubric.robustness               88/ 88   5.0%/  5.0%
tests/filesys/base/Rubric                      30/ 30  20.0%/ 20.0%
--------------------------------------------- --- --- ------ ------
Total                                                  88.4%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of virtual memory subsystem (tests/vm/Rubric.functionality):
	- Test stack growth.
	     3/ 3 tests/vm/pt-grow-stack
	     3/ 3 tests/vm/pt-grow-stk-sc
	     3/ 3 tests/vm/pt-big-stk-obj
	     3/ 3 tests/vm/pt-grow-pusha

	- Test paging behavior.
	     3/ 3 tests/vm/page-linear
	     3/ 3 tests/vm/page-parallel
	     3/ 3 tests/vm/page-shuffle
	     4/ 4 tests/vm/page-merge-seq
	     4/ 4 tests/vm/page-merge-par
	  ** 0/ 4 tests/vm/page-merge-mm
	     4/ 4 tests/vm/page-merge-stk

	- Test "mmap" system call.
	     2/ 2 tests/vm/mmap-read
	     2/ 2 tests/vm/mmap-write
	     2/ 2 tests/vm/mmap-shuffle

	     2/ 2 tests/vm/mmap-twice

	     2/ 2 tests/vm/mmap-unmap
	     1/ 1 tests/vm/mmap-exit

	     3/ 3 tests/vm/mmap-clean

	  ** 0/ 2 tests/vm/mmap-close
	  ** 0/ 2 tests/vm/mmap-remove

	- Section summary.
	     17/ 20 tests passed
	     47/ 55 points subtotal

Robustness of virtual memory subsystem (tests/vm/Rubric.robustness):
	- Test robustness of page table support.
	     2/ 2 tests/vm/pt-bad-addr
	     3/ 3 tests/vm/pt-bad-read
	     2/ 2 tests/vm/pt-write-code
	     3/ 3 tests/vm/pt-write-code2
	     4/ 4 tests/vm/pt-grow-bad

	- Test robustness of "mmap" system call.
	     1/ 1 tests/vm/mmap-bad-fd
	     1/ 1 tests/vm/mmap-inherit
	     1/ 1 tests/vm/mmap-null
	     1/ 1 tests/vm/mmap-zero

	     2/ 2 tests/vm/mmap-misalign

	  ** 0/ 2 tests/vm/mmap-over-code
	  ** 0/ 2 tests/vm/mmap-over-data
	  ** 0/ 2 tests/vm/mmap-over-stk
	  ** 0/ 2 tests/vm/mmap-overlap


	- Section summary.
	     10/ 14 tests passed
	     20/ 28 points subtotal

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	     3/ 3 tests/userprog/open-missing
	     3/ 3 tests/userprog/open-normal
	     3/ 3 tests/userprog/open-twice

	- Test "read" system call.
	     3/ 3 tests/userprog/read-normal
	     3/ 3 tests/userprog/read-zero

	- Test "write" system call.
	     3/ 3 tests/userprog/write-normal
	     3/ 3 tests/userprog/write-zero

	- Test "close" system call.
	     3/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	     5/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	     3/ 3 tests/userprog/rox-simple
	     3/ 3 tests/userprog/rox-child
	     3/ 3 tests/userprog/rox-multichild

	- Section summary.
	     28/ 28 tests passed
	    108/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	     2/ 2 tests/userprog/close-twice
	     2/ 2 tests/userprog/read-bad-fd
	     2/ 2 tests/userprog/read-stdout
	     2/ 2 tests/userprog/write-bad-fd
	     2/ 2 tests/userprog/write-stdin
	     2/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     3/ 3 tests/userprog/create-bad-ptr
	     3/ 3 tests/userprog/exec-bad-ptr
	     3/ 3 tests/userprog/open-bad-ptr
	     3/ 3 tests/userprog/read-bad-ptr
	     3/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	     3/ 3 tests/userprog/open-boundary
	     3/ 3 tests/userprog/read-boundary
	     3/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	     2/ 2 tests/userprog/create-null
	     2/ 2 tests/userprog/open-null
	     2/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	     3/ 3 tests/userprog/sc-bad-arg
	     3/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	     5/ 5 tests/userprog/exec-missing
	     5/ 5 tests/userprog/wait-bad-pid
	     5/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	     1/ 1 tests/userprog/bad-read
	     1/ 1 tests/userprog/bad-write
	     1/ 1 tests/userprog/bad-jump
	     1/ 1 tests/userprog/bad-read2
	     1/ 1 tests/userprog/bad-write2
	     1/ 1 tests/userprog/bad-jump2

	- Section summary.
	     34/ 34 tests passed
	     88/ 88 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	     1/ 1 tests/filesys/base/sm-create
	     2/ 2 tests/filesys/base/sm-full
	     2/ 2 tests/filesys/base/sm-random
	     2/ 2 tests/filesys/base/sm-seq-block
	     3/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	     1/ 1 tests/filesys/base/lg-create
	     2/ 2 tests/filesys/base/lg-full
	     2/ 2 tests/filesys/base/lg-random
	     2/ 2 tests/filesys/base/lg-seq-block
	     3/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	     4/ 4 tests/filesys/base/syn-read
	     4/ 4 tests/filesys/base/syn-write
	     2/ 2 tests/filesys/base/syn-remove

	- Section summary.
	     13/ 13 tests passed
	     30/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-mm FAILURE:

run: bad value 1 in byte 3558: FAILED

OUTPUT FROM tests/vm/page-merge-mm:

Copying tests/vm/page-merge-mm into /tmp/9u25P9LmYW.dsk...
Copying tests/vm/child-qsort-mm into /tmp/9u25P9LmYW.dsk...
Writing command line to /tmp/m8XtSi1Kkx.dsk...
qemu -hda /tmp/m8XtSi1Kkx.dsk -hdb /tmp/eBOb2mmNfT.dsk -hdc /tmp/9u25P9LmYW.dsk -hdd /tmp/KwQhWrIChE.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put page-merge-mm put child-qsort-mm run page-merge-mm
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 160 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
(page-merge-mm) sort chunk 1
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 2
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 3
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 4
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 5
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 6
child-qsort-mm: exit(80)
(page-merge-mm) sort chunk 7
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 0
(page-merge-mm) wait for child 1
(page-merge-mm) wait for child 2
(page-merge-mm) wait for child 3
(page-merge-mm) wait for child 4
(page-merge-mm) wait for child 5
child-qsort-mm: exit(80)
(page-merge-mm) wait for child 6
(page-merge-mm) wait for child 7
(page-merge-mm) merge
(page-merge-mm) verify
(page-merge-mm) bad value 1 in byte 3558: FAILED
page-merge-mm: exit(1)
Execution of 'page-merge-mm' complete.
Timer: 1528 ticks
Thread: 30 idle ticks, 77 kernel ticks, 1421 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 4881 reads, 6506 writes
hd1:0: 160 reads, 0 writes
hd1:1: 296 reads, 1456 writes
Console: 1808 characters output
Keyboard: 0 keys pressed
Exception: 845 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-close FAILURE:

run: TIMEOUT after 60 seconds of host CPU time

OUTPUT FROM tests/vm/mmap-close:

Copying tests/vm/mmap-close into /tmp/VJ8oeFp2Zs.dsk...
Copying ../../tests/vm/sample.txt into /tmp/VJ8oeFp2Zs.dsk...
Writing command line to /tmp/ZXtZvbXmLt.dsk...
qemu -hda /tmp/ZXtZvbXmLt.dsk -hdb /tmp/rfGpPLJuyC.dsk -hdc /tmp/VJ8oeFp2Zs.dsk -hdd /tmp/14FlsAc9Xl.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-close put sample.txt run mmap-close
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 79 sector (39 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-close' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-close':
(mmap-close) begin
(mmap-close) open "sample.txt"
(mmap-close) mmap "sample.txt"

TIMEOUT after 60 seconds of host CPU time

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-remove FAILURE:

run: TIMEOUT after 60 seconds of host CPU time

OUTPUT FROM tests/vm/mmap-remove:

Copying tests/vm/mmap-remove into /tmp/Oy35kNRZEZ.dsk...
Copying ../../tests/vm/sample.txt into /tmp/Oy35kNRZEZ.dsk...
Writing command line to /tmp/bQUxlZJgap.dsk...
qemu -hda /tmp/bQUxlZJgap.dsk -hdb /tmp/mq7ffNdjej.dsk -hdc /tmp/Oy35kNRZEZ.dsk -hdd /tmp/QPVfxTnteU.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-remove put sample.txt run mmap-remove
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 79 sector (39 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-remove' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-remove':
(mmap-remove) begin
(mmap-remove) open "sample.txt"
(mmap-remove) mmap "sample.txt"
(mmap-remove) remove "sample.txt"
(mmap-remove) try to open "sample.txt"
(mmap-remove) create "another"

TIMEOUT after 60 seconds of host CPU time

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-code FAILURE:

run: try to mmap over code segment: FAILED

OUTPUT FROM tests/vm/mmap-over-code:

Copying tests/vm/mmap-over-code into /tmp/2WJ7lEu2Ck.dsk...
Copying ../../tests/vm/sample.txt into /tmp/2WJ7lEu2Ck.dsk...
Writing command line to /tmp/6nKqQ43z9C.dsk...
qemu -hda /tmp/6nKqQ43z9C.dsk -hdb /tmp/8FWmeFTayo.dsk -hdc /tmp/2WJ7lEu2Ck.dsk -hdd /tmp/silwpBzJOr.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-over-code put sample.txt run mmap-over-code
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,131,200 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 76 sector (38 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-code' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-code':
(mmap-over-code) begin
(mmap-over-code) open "sample.txt"
(mmap-over-code) try to mmap over code segment
(mmap-over-code) try to mmap over code segment: FAILED
mmap-over-code: exit(1)
Execution of 'mmap-over-code' complete.
Timer: 88 ticks
Thread: 30 idle ticks, 56 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 90 reads, 162 writes
hd1:0: 76 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1118 characters output
Keyboard: 0 keys pressed
Exception: 4 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-data FAILURE:

run: try to mmap over data segment: FAILED

OUTPUT FROM tests/vm/mmap-over-data:

Copying tests/vm/mmap-over-data into /tmp/9kgoSUx118.dsk...
Copying ../../tests/vm/sample.txt into /tmp/9kgoSUx118.dsk...
Writing command line to /tmp/FFPOi74oi6.dsk...
qemu -hda /tmp/FFPOi74oi6.dsk -hdb /tmp/NgqRoVjDTC.dsk -hdc /tmp/9kgoSUx118.dsk -hdd /tmp/4k9WYl15Up.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-over-data put sample.txt run mmap-over-data
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 77 sector (38 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-data' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-data':
(mmap-over-data) begin
(mmap-over-data) open "sample.txt"
(mmap-over-data) try to mmap over data segment
(mmap-over-data) try to mmap over data segment: FAILED
mmap-over-data: exit(1)
Execution of 'mmap-over-data' complete.
Timer: 86 ticks
Thread: 30 idle ticks, 54 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 90 reads, 164 writes
hd1:0: 77 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1118 characters output
Keyboard: 0 keys pressed
Exception: 4 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-over-stk FAILURE:

Kernel panic in run: PANIC at ../../threads/synch.c:242 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0xc0107756 0xc0102acd 0xc010e0f8 0xc010af78 0xc0101935 0xc0101b0b 0xc010c991 0xc010de86 0xc0108f3f 0xc0108f89 0xc010dd00 0xc0109b5e 0xc0100c58 0xc010bf10 0xc010b6cb 0xc0101935 0xc0101b0b 0x804a003 0x804824f 0x804810a 0x80486ef 0x804871c
Translation of call stack:
In kernel.o:
0xc0107756: debug_panic (.../../lib/kernel/debug.c:34)
0xc0102acd: lock_acquire (...../../threads/synch.c:243)
0xc010e0f8: frame_table_lock_acquire (...uild/../../vm/frame.c:112)
0xc010af78: page_fault (.../../../threads/vaddr.h:39)
0xc0101935: intr_handler (..../threads/interrupt.c:361)
0xc0101b0b: intr_entry (threads/intr-stubs.S:38)
0xc010c991: file_write_at (.../../../filesys/file.c:113)
0xc010de86: page_table_free (.../build/../../vm/page.c:96)
0xc0108f3f: hash_clear (..../../lib/kernel/hash.c:67)
0xc0108f89: hash_destroy (..../../lib/kernel/hash.c:91)
0xc010dd00: page_table_remove (.../build/../../vm/page.c:24)
0xc0109b5e: process_exit (...../userprog/process.c:197)
0xc0100c58: thread_exit (..../../threads/thread.c:334)
0xc010bf10: close_all_filelist (...../userprog/syscall.c:466)
0xc010b6cb: syscall_handler (.../../userprog/syscall.c:86)
0xc0101935: intr_handler (..../threads/interrupt.c:361)
0xc0101b0b: intr_entry (threads/intr-stubs.S:38)
In tests/vm/mmap-over-stk:
0x0804a003: exit (.../../lib/user/syscall.c:74)
0x0804824f: swap (...uild/../../tests/lib.c:53)
0x0804810a: test_main (...sts/vm/mmap-over-stk.c:18)
0x080486ef: main (...ild/../../tests/main.c:13)
0x0804871c: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/vm/mmap-over-stk:

Copying tests/vm/mmap-over-stk into /tmp/EkldP7EdQn.dsk...
Copying ../../tests/vm/sample.txt into /tmp/EkldP7EdQn.dsk...
Writing command line to /tmp/IeHvub6AdB.dsk...
qemu -hda /tmp/IeHvub6AdB.dsk -hdb /tmp/a5ZnODNm40.dsk -hdc /tmp/EkldP7EdQn.dsk -hdd /tmp/WFqDGVcBKY.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-over-stk put sample.txt run mmap-over-stk
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 76 sector (38 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-over-stk' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-over-stk':
(mmap-over-stk) begin
(mmap-over-stk) open "sample.txt"
(mmap-over-stk) try to mmap over stack segment
(mmap-over-stk) try to mmap over stack segment: FAILED
mmap-over-stk: exit(1)
Kernel PANIC at ../../threads/synch.c:242 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0xc0107756 0xc0102acd 0xc010e0f8 0xc010af78 0xc0101935 0xc0101b0b 0xc010c991 0xc010de86 0xc0108f3f 0xc0108f89 0xc010dd00 0xc0109b5e 0xc0100c58 0xc010bf10 0xc010b6cb 0xc0101935 0xc0101b0b 0x804a003 0x804824f 0x804810a 0x80486ef 0x804871c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 30 idle ticks, 54 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 90 reads, 162 writes
hd1:0: 76 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1592 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-overlap FAILURE:

run: try to mmap "zeros" again: FAILED

OUTPUT FROM tests/vm/mmap-overlap:

Copying tests/vm/mmap-overlap into /tmp/J4DMLXt9SJ.dsk...
Copying tests/vm/zeros into /tmp/J4DMLXt9SJ.dsk...
Writing command line to /tmp/stLcLHjXhf.dsk...
qemu -hda /tmp/stLcLHjXhf.dsk -hdb /tmp/gQLHYtIqkv.dsk -hdc /tmp/J4DMLXt9SJ.dsk -hdd /tmp/Dbw5ldot8K.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put mmap-overlap put zeros run mmap-overlap
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  65,433,600 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 89 sector (44 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-overlap' into the file system...
Putting 'zeros' into the file system...
Executing 'mmap-overlap':
(mmap-overlap) begin
(mmap-overlap) open "zeros" once
(mmap-overlap) mmap "zeros"
(mmap-overlap) open "zeros" again
(mmap-overlap) try to mmap "zeros" again
(mmap-overlap) try to mmap "zeros" again: FAILED
mmap-overlap: exit(1)
Execution of 'mmap-overlap' complete.
Timer: 85 ticks
Thread: 30 idle ticks, 53 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 100 reads, 188 writes
hd1:0: 89 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1143 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off...
