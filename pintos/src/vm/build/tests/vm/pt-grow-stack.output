Copying tests/vm/pt-grow-stack into /tmp/2xs7hEF4RS.dsk...
Writing command line to /tmp/ROkMcWSWAf.dsk...
qemu -hda /tmp/ROkMcWSWAf.dsk -hdb /tmp/xFlvkuB9F5.dsk -hdc /tmp/2xs7hEF4RS.dsk -hdd /tmp/M4RKlr2hcU.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put pt-grow-stack run pt-grow-stack
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 81 sector (40 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-grow-stack' into the file system...
Executing 'pt-grow-stack':
(pt-grow-stack) begin
Stack growth start
Kernel PANIC at ../../threads/synch.c:242 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0xc0107756 0xc0102acd 0xc010da01 0xc010b047 0xc0101935 0xc0101b0b 0xc010b1c2 0xc0101935 0xc0101b0b 0x80480ab 0x8048883 0x80488b0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 71 ticks
Thread: 30 idle ticks, 41 kernel ticks, 0 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 67 reads, 170 writes
hd1:0: 81 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1284 characters output
Keyboard: 0 keys pressed
Exception: 2 page faults
Powering off...
