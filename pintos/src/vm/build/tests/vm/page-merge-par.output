Copying tests/vm/page-merge-par into /tmp/gcBvVjcN2u.dsk...
Copying tests/vm/child-sort into /tmp/gcBvVjcN2u.dsk...
Writing command line to /tmp/IhBKXxBvJC.dsk...
qemu -hda /tmp/IhBKXxBvJC.dsk -hdb /tmp/mgsVn0uPWF.dsk -hdc /tmp/gcBvVjcN2u.dsk -hdd /tmp/Zkr9aYKicZ.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put page-merge-par put child-sort run page-merge-par
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 155 sector (77 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-par' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-par':
(page-merge-par) begin
(page-merge-par) init
(page-merge-par) sort chunk 0
(page-merge-par) sort chunk 1
child-sort: exit(123)
(page-merge-par) sort chunk 2
child-sort: exit(123)
(page-merge-par) sort chunk 3
child-sort: exit(123)
(page-merge-par) sort chunk 4
child-sort: exit(123)
(page-merge-par) sort chunk 5
child-sort: exit(123)
(page-merge-par) sort chunk 6
child-sort: exit(123)
(page-merge-par) sort chunk 7
child-sort: exit(123)
(page-merge-par) wait for child 0
child-sort: exit(123)
(page-merge-par) wait for child 1
(page-merge-par) wait for child 2
(page-merge-par) wait for child 3
(page-merge-par) wait for child 4
(page-merge-par) wait for child 5
(page-merge-par) wait for child 6
(page-merge-par) wait for child 7
(page-merge-par) merge
(page-merge-par) verify
(page-merge-par) success, buf_idx=1,048,576
(page-merge-par) end
page-merge-par: exit(0)
Kernel PANIC at ../../vm/swap.c:33 in swap_set(): assertion `bitmap_test(swap_table, !value)' failed.
Call stack: 0xc0107756 0xc010daaf 0xc010d860 0xc0108f3f 0xc0108f89 0xc010d6f0 0xc0109b43 0xc0100c58 0xc010b909 0xc010b34b 0xc0101935 0xc0101b0b 0x804a463 0x8048b84.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 1170 ticks
Thread: 30 idle ticks, 59 kernel ticks, 1081 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 4920 reads, 6496 writes
hd1:0: 155 reads, 0 writes
hd1:1: 4584 reads, 5744 writes
Console: 2200 characters output
Keyboard: 0 keys pressed
Exception: 573 page faults
Powering off...
